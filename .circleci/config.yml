version: 2.1

executors:
  movie-api-executor:
    machine:
      image: ubuntu-1604:202004-01
    working_directory: ~/movie-api

jobs:
  test:
    executor: movie-api-executor
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: 
          name: Install Node Dependencies
          command: npm i
      - run:
          name: Run Linting and Tests
          command: npm test
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
         
  build:
    executor: movie-api-executor
    environment:
      VERSION: '1.0.0'
    steps:
      - add_ssh_keys:
          fingerprints:
            - "dc:c5:db:c2:6b:f1:ff:55:a9:e7:34:bc:af:50:e6:8b"
      - checkout
      - run:
          name: Tag Git
          command: |
            git config user.email "work-mpconsultants@outlook.com"
            git config user.name "Mark Phillips"
            npm version -m "[ci skip] Bump minor version"
            VERSION="$(node -pe "require('./package.json').version")"
            echo Version created "$VERSION"
            git tag -a v${VERSION} -m "Release version v${VERSION}"
            git push origin master --follow-tags
      - run:
          name : Build Docker Image
          command: |
            docker build -f ./build/Dockerfile -t movie-api:$VERSION .
            mkdir -p workspace
            docker save -o workspace/movie-api.tar movie-api:$VERSION
      - persist_to_workspace:
          root: workspace
          paths: 
            - movie-api.tar

  deploy:
    executor: movie-api-executor
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Deploy to Docker Image to Heroku
          command: |
            docker load -i /tmp/workspace/movie-api.tar
            docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
            docker tag movie-api:$VERSION registry.heroku.com/$HEROKU_APP_NAME/web
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
            docker inspect registry.heroku.com/$HEROKU_APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID_FILE
            export WEB_DOCKER_IMAGE_ID=$(cat WEB_DOCKER_IMAGE_ID_FILE)
            curl -n -X PATCH https://api.heroku.com/apps/$HEROKU_APP_NAME/formation \
            -d '{ "updates": [ { "type": "web", "docker_image": "'"$WEB_DOCKER_IMAGE_ID"'" }]}' \
            -H "Content-Type: application/json" \
            -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
            -H "Authorization: Bearer $HEROKU_API_KEY"

workflows:
  version: 2
  cd_pipeline:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build