version: 2.1

executors:
  movie-api-executor:
    machine:
      image: ubuntu-1604:202004-01
    working_directory: ~/movie-api

jobs:
  install_test:
    executor: movie-api-executor
    steps:
      - checkout
      - run: 
          name: Install Node dependencies
          command: npm i
      - run:
          name: Run linting and tests
          command: npm test

  build_image:
    executor: movie-api-executor
    steps:
      - checkout
      - run:
          name : Build Docker Image
          command: |
            docker build -f ./build/Dockerfile -t movie-api:$CIRCLE_SHA1 .
            mkdir -p workspace
            docker save -o workspace/movie-api.tar movie-api:$CIRCLE_SHA1
      - persist_to_workspace:
          root: workspace
          paths: 
            - movie-api.tar
            
  deploy_image:
    executor: movie-api-executor
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Deploy to Heroku
          command: |
            docker load -i /tmp/workspace/movie-api.tar
            docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
            docker tag movie-api:$CIRCLE_SHA1 registry.heroku.com/$HEROKU_APP_NAME/web
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
            docker inspect registry.heroku.com/$HEROKU_APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID_FILE
            export WEB_DOCKER_IMAGE_ID=$(cat WEB_DOCKER_IMAGE_ID_FILE)
            curl -n -X PATCH https://api.heroku.com/apps/$HEROKU_APP_NAME/formation \
            -d '{ "updates": [ { "type": "web", "docker_image": "'"$WEB_DOCKER_IMAGE_ID"'" }]}' \
            -H "Content-Type: application/json" \
            -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
            -H "Authorization: Bearer $HEROKU_API_KEY"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install_test
      - build_image:
          requires:
            - install_test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_image